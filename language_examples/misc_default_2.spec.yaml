- source: '{'
  scopesBegin:
    - meta.punctuation.section.bracket
  scopes:
    - punctuation.section.bracket
- source: config
  scopesBegin:
    - meta.punctuation.section.function
    - meta.punctuation.section.parameters
  scopes:
    - variable.parameter.function
- source: ','
  scopes:
    - punctuation.separator.comma
- source: lib
  scopes:
    - variable.parameter.function
- source: ','
  scopes:
    - punctuation.separator.comma
- source: stdenv
  scopes:
    - variable.parameter.function
- source: ','
  scopes:
    - punctuation.separator.comma
- source: fetchurl
  scopes:
    - variable.parameter.function
- source: ','
  scopes:
    - punctuation.separator.comma
- source: fetchFromGitHub
  scopes:
    - variable.parameter.function
- source: ','
  scopes:
    - punctuation.separator.comma
- source: pkgs
  scopes:
    - variable.parameter.function
- source: ','
  scopes:
    - punctuation.separator.comma
- source: buildPackages
  scopes:
    - variable.parameter.function
- source: ','
  scopes:
    - punctuation.separator.comma
- source: callPackage
  scopes:
    - variable.parameter.function
- source: ','
  scopes:
    - punctuation.separator.comma
- source: enableThreading
  scopes:
    - variable.parameter.function
- source: '?'
  scopesBegin:
    - meta.default
  scopes:
    - punctuation.separator.default
- source: 'true'
  scopes:
    - constant.language.boolean.true
  scopesEnd:
    - meta.default
- source: ','
  scopes:
    - punctuation.separator.comma
- source: coreutils
  scopes:
    - variable.parameter.function
- source: ','
  scopes:
    - punctuation.separator.comma
- source: makeWrapper
  scopes:
    - variable.parameter.function
- source: ','
  scopes:
    - punctuation.separator.comma
- source: enableCrypt
  scopes:
    - variable.parameter.function
- source: '?'
  scopesBegin:
    - meta.default
  scopes:
    - punctuation.separator.default
- source: 'true'
  scopes:
    - constant.language.boolean.true
  scopesEnd:
    - meta.default
- source: ','
  scopes:
    - punctuation.separator.comma
- source: libxcrypt
  scopes:
    - variable.parameter.function
- source: '?'
  scopesBegin:
    - meta.default
  scopes:
    - punctuation.separator.default
- source: 'null'
  scopes:
    - constant.language.null
  scopesEnd:
    - meta.default
- source: ','
  scopes:
    - punctuation.separator.comma
- source: zlib
  scopes:
    - variable.parameter.function
- source: '}'
  scopes:
    - punctuation.section.bracket
- source: ':'
  scopes:
    - punctuation.definition.function.colon
  scopesEnd:
    - meta.punctuation.section.bracket
    - meta.punctuation.section.function
    - meta.punctuation.section.parameters
- source: assert
  scopesBegin:
    - meta.punctuation.section.conditional
  scopes:
    - keyword.operator.assert
- source: (
  scopes:
    - punctuation.section.parentheses
- source: enableCrypt
  scopes:
    - variable.other.object
- source: '->'
  scopes:
    - keyword.operator.->
- source: (
  scopes:
    - punctuation.section.parentheses
- source: libxcrypt
  scopes:
    - variable.other.object
- source: '!='
  scopes:
    - keyword.operator.!=
- source: 'null'
  scopes:
    - constant.language.null
- source: )
  scopesBegin:
    - punctuation.section.parentheses
- source: )
  scopesEnd:
    - punctuation.section.parentheses
- source: ;
  scopes:
    - punctuation.separator.assert
  scopesEnd:
    - meta.punctuation.section.conditional
- source: '#'
  scopes:
    - punctuation.definition.comment
- source: ' Note: this package is used for bootstrapping fetchurl, and thus'
  scopes:
    - comment.line
- source: '#'
  scopes:
    - punctuation.definition.comment
- source: ' cannot use fetchpatch! All mutable patches (generated by GitHub or'
  scopes:
    - comment.line
- source: '#'
  scopes:
    - punctuation.definition.comment
- source: ' cgit) that are needed here should be included directly in Nixpkgs as'
  scopes:
    - comment.line
- source: '#'
  scopes:
    - punctuation.definition.comment
- source: ' files.'
  scopes:
    - comment.line
- source: let
  scopesBegin:
    - meta.punctuation.section.let
  scopes:
    - keyword.control.let
- source: libc
  scopesBegin:
    - meta.let.in.part1
    - meta.statement
    - meta.assignment-start
  scopes:
    - meta.attribute-key
    - variable.other.constant
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment-start
- source: if
  scopesBegin:
    - meta.punctuation.section.conditional
  scopes:
    - keyword.control.if
- source: stdenv
  scopesBegin:
    - meta.punctuation.section.condition
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: cc
  scopes:
    - variable.other.object.property
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: libc
  scopes:
    - variable.other.property.last
- source: or
  scopes:
    - variable.other.object
- source: 'null'
  scopes:
    - constant.language.null
- source: '!='
  scopes:
    - keyword.operator.!=
- source: 'null'
  scopes:
    - constant.language.null
  scopesEnd:
    - meta.punctuation.section.condition
- source: then
  scopes:
    - keyword.control.then
- source: stdenv
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: cc
  scopes:
    - variable.other.object.property
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: libc
  scopes:
    - variable.other.property.last
- source: else
  scopes:
    - keyword.control.else
  scopesEnd:
    - meta.punctuation.section.conditional
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: /usr
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: libcInc
  scopesBegin:
    - meta.assignment-start
  scopes:
    - meta.attribute-key
    - variable.other.constant
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment-start
- source: lib
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: getDev
  scopes:
    - variable.other.property.last
- source: libc
  scopes:
    - variable.other.object
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: libcLib
  scopesBegin:
    - meta.assignment-start
  scopes:
    - meta.attribute-key
    - variable.other.constant
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment-start
- source: lib
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: getLib
  scopes:
    - variable.other.property.last
- source: libc
  scopes:
    - variable.other.object
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: crossCompiling
  scopesBegin:
    - meta.assignment-start
  scopes:
    - meta.attribute-key
    - variable.other.constant
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment-start
- source: stdenv
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: buildPlatform
  scopes:
    - variable.other.property.last
- source: '!='
  scopes:
    - keyword.operator.!=
- source: stdenv
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: hostPlatform
  scopes:
    - variable.other.property.last
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: common
  scopesBegin:
    - meta.assignment-start
  scopes:
    - meta.attribute-key
    - variable.other.constant
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment-start
- source: '{'
  scopesBegin:
    - meta.punctuation.section.bracket
  scopes:
    - punctuation.section.bracket
- source: perl
  scopesBegin:
    - meta.punctuation.section.function
    - meta.punctuation.section.parameters
  scopes:
    - variable.parameter.function
- source: ','
  scopes:
    - punctuation.separator.comma
- source: buildPerl
  scopes:
    - variable.parameter.function
- source: ','
  scopes:
    - punctuation.separator.comma
- source: version
  scopes:
    - variable.parameter.function
- source: ','
  scopes:
    - punctuation.separator.comma
- source: sha256
  scopes:
    - variable.parameter.function
- source: '}'
  scopes:
    - punctuation.section.bracket
- source: ':'
  scopes:
    - punctuation.definition.function.colon
  scopesEnd:
    - meta.punctuation.section.bracket
    - meta.punctuation.section.function
    - meta.punctuation.section.parameters
- source: stdenv
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: mkDerivation
  scopes:
    - variable.other.property.last
- source: (
  scopes:
    - punctuation.section.parentheses
- source: rec
  scopesBegin:
    - meta.punctuation.section.bracket
  scopes:
    - storage.modifier
- source: '{'
  scopes:
    - punctuation.section.bracket
- source: '    inherit version'
  scopesEnd:
    - meta.punctuation.section.bracket
- source: ;
- source: pname
  scopes:
    - variable.other.object
- source: ' = '
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: perl
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: ;
- source: src
  scopes:
    - variable.other.object
- source: ' ='
- source: fetchurl
  scopes:
    - entity.name.function.call
- source: '{'
  scopesBegin:
    - meta.punctuation.section.bracket
  scopes:
    - punctuation.section.bracket
- source: __id_static
  scopesBegin:
    - meta.attribute-set
    - meta.statement
    - meta.assignment-start
  scopes:
    - meta.attribute-key
    - variable.other.constant
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment-start
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: '0.1512204687687564'
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: __id_dynamic
  scopesBegin:
    - meta.assignment-start
  scopes:
    - meta.attribute-key
    - variable.other.constant
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment-start
- source: builtins
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: hashFile
  scopes:
    - variable.other.property.last
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: sha256
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: /
  scopesBegin:
    - constant.other.path.absolute
  scopes:
    - punctuation.definition.path.absolute
    - storage.type.modifier
- source: Users
  scopesBegin:
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: jeffhykin
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: repos
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: snowball
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: random.ignore
  scopesEnd:
    - constant.other.path.absolute
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: url
  scopesBegin:
    - meta.assignment-start
  scopes:
    - meta.attribute-key
    - variable.other.constant
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment-start
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: 'mirror://cpan/src/5.0/perl-'
- source: '${'
  scopes:
    - punctuation.section.embedded
- source: version
  scopes:
    - variable.other.object
- source: '}'
  scopes:
    - punctuation.section.embedded
- source: .tar.gz
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: ;
  scopes:
    - punctuation.terminator.statement
  scopesEnd:
    - meta.statement
- source: inherit
  scopesBegin:
    - meta.inherit
  scopes:
    - keyword.other.inherit
- source: sha256
  scopes:
    - variable.other.constant
- source: ;
  scopes:
    - punctuation.terminator.statement
  scopesEnd:
    - meta.inherit
- source: '}'
  scopes:
    - punctuation.section.bracket
  scopesEnd:
    - meta.punctuation.section.bracket
    - meta.attribute-set
- source: ;
- source: strictDeps
  scopes:
    - variable.other.object
- source: ' = '
- source: 'true'
  scopes:
    - constant.language.boolean.true
- source: ;
- source: '#'
  scopes:
    - punctuation.definition.comment
- source: ' TODO: Add a "dev" output containing the header files.'
  scopes:
    - comment.line
- source: outputs
  scopes:
    - variable.other.object
- source: ' = '
- source: '['
  scopesBegin:
    - meta.list
  scopes:
    - punctuation.definition.list
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: out
- source: '"'
  scopesBegin:
    - punctuation.definition.string.double
- source: '"'
  scopesEnd:
    - punctuation.definition.string.double
- source: man
- source: '"'
  scopesBegin:
    - punctuation.definition.string.double
- source: '"'
  scopesEnd:
    - punctuation.definition.string.double
- source: devdoc
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: ']'
  scopes:
    - punctuation.definition.list
  scopesEnd:
    - meta.list
- source: ++
  scopes:
    - keyword.operator.++
- source: lib
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: optional
  scopes:
    - variable.other.property.last
- source: crossCompiling
  scopes:
    - variable.other.object
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: mini
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: ;
- source: setOutputFlags
  scopes:
    - variable.other.object
- source: ' = '
- source: 'false'
  scopes:
    - constant.language.boolean.false
- source: ;
- source: '#'
  scopes:
    - punctuation.definition.comment
- source: ' On FreeBSD, if Perl is built with threads support, having'
  scopes:
    - comment.line
- source: '#'
  scopes:
    - punctuation.definition.comment
- source: ' libxcrypt available will result in a build failure, because'
  scopes:
    - comment.line
- source: '#'
  scopes:
    - punctuation.definition.comment
- source: ' perl.h will get conflicting definitions of struct crypt_data'
  scopes:
    - comment.line
- source: '#'
  scopes:
    - punctuation.definition.comment
- source: ' from libc''s unistd.h and libxcrypt''s crypt.h.'
  scopes:
    - comment.line
- source: '#'
  scopesBegin:
    - punctuation.definition.comment
- source: '#'
  scopesEnd:
    - punctuation.definition.comment
- source: ' FreeBSD Ports has the same issue building the perl port if'
  scopes:
    - comment.line
- source: '#'
  scopes:
    - punctuation.definition.comment
- source: ' the libxcrypt port has been installed.'
  scopes:
    - comment.line
- source: '#'
  scopesBegin:
    - punctuation.definition.comment
- source: '#'
  scopesEnd:
    - punctuation.definition.comment
- source: ' Without libxcrypt, Perl will still find FreeBSD''s crypt functions.'
  scopes:
    - comment.line
- source: propagatedBuildInputs
  scopes:
    - variable.other.object
- source: ' = '
- source: lib
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: optional
  scopes:
    - variable.other.property.last
- source: (
  scopes:
    - punctuation.section.parentheses
- source: enableCrypt
  scopes:
    - variable.other.object
- source: '&&'
  scopes:
    - keyword.operator.&&
- source: '!'
  scopes:
    - keyword.operator.!
- source: stdenv
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: isFreeBSD
  scopes:
    - variable.other.property.last
- source: )
  scopes:
    - punctuation.section.parentheses
- source: libxcrypt
  scopes:
    - variable.other.object
- source: ;
- source: disallowedReferences
  scopes:
    - variable.other.object
- source: ' = '
- source: '['
  scopesBegin:
    - meta.list
  scopes:
    - punctuation.definition.list
- source: stdenv
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: cc
  scopes:
    - variable.other.property.last
- source: ']'
  scopes:
    - punctuation.definition.list
  scopesEnd:
    - meta.list
- source: ;
- source: patches
  scopes:
    - variable.other.object
- source: ' ='
- source: '['
  scopesBegin:
    - meta.list
  scopes:
    - punctuation.definition.list
- source: '#'
  scopes:
    - punctuation.definition.comment
- source: ' Do not look in /usr etc. for dependencies.'
  scopes:
    - comment.line
- source: .
  scopesBegin:
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
  scopes:
    - punctuation.definition.relative
    - storage.type.modifier
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: no-sys-dirs-5.31.patch
  scopesEnd:
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
- source: '#'
  scopes:
    - punctuation.definition.comment
- source: ' Enable TLS/SSL verification in HTTP::Tiny by default'
  scopes:
    - comment.line
- source: .
  scopesBegin:
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
  scopes:
    - punctuation.definition.relative
    - storage.type.modifier
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: http-tiny-verify-ssl-by-default.patch
  scopesEnd:
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
- source: ']'
  scopes:
    - punctuation.definition.list
  scopesEnd:
    - meta.list
- source: ++
  scopes:
    - keyword.operator.++
- source: lib
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: optional
  scopes:
    - variable.other.property.last
- source: stdenv
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: isSunOS
  scopes:
    - variable.other.property.last
- source: .
  scopesBegin:
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
  scopes:
    - punctuation.definition.relative
    - storage.type.modifier
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: ld-shared.patch
  scopesEnd:
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
- source: ++
  scopes:
    - keyword.operator.++
- source: lib
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: optionals
  scopes:
    - variable.other.property.last
- source: stdenv
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: isDarwin
  scopes:
    - variable.other.property.last
- source: '['
  scopesBegin:
    - meta.list
  scopes:
    - punctuation.definition.list
- source: .
  scopesBegin:
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
  scopes:
    - punctuation.definition.relative
    - storage.type.modifier
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: cpp-precomp.patch
- source: .
  scopes:
    - punctuation.definition.relative
    - storage.type.modifier
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: sw_vers.patch
  scopesEnd:
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
- source: ']'
  scopes:
    - punctuation.definition.list
  scopesEnd:
    - meta.list
- source: ++
  scopes:
    - keyword.operator.++
- source: lib
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: optional
  scopes:
    - variable.other.property.last
- source: crossCompiling
  scopes:
    - variable.other.object
- source: .
  scopesBegin:
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
  scopes:
    - punctuation.definition.relative
    - storage.type.modifier
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: MakeMaker-cross.patch
  scopesEnd:
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
- source: ;
- source: '#'
  scopes:
    - punctuation.definition.comment
- source: ' This is not done for native builds because pwd may need to come from'
  scopes:
    - comment.line
- source: '#'
  scopes:
    - punctuation.definition.comment
- source: ' bootstrap tools when building bootstrap perl.'
  scopes:
    - comment.line
- source: postPatch
  scopes:
    - variable.other.object
- source: ' = '
- source: (
  scopes:
    - punctuation.section.parentheses
- source: if
  scopesBegin:
    - meta.punctuation.section.conditional
  scopes:
    - keyword.control.if
- source: crossCompiling
  scopes:
    - meta.punctuation.section.condition
    - variable.other.object
- source: then
  scopes:
    - keyword.control.then
- source: ''''''
  scopesBegin:
    - string.quoted.other
  scopes:
    - string.quoted.single
    - punctuation.definition.string.single
- source: '      substituteInPlace dist/PathTools/Cwd.pm \'
- source: '        --replace "/bin/pwd" '''
- source: '${'
  scopes:
    - punctuation.section.embedded
- source: coreutils
  scopes:
    - variable.other.object
- source: '}'
  scopes:
    - punctuation.section.embedded
- source: /bin/pwd'
- source: '      substituteInPlace cnf/configure_tool.sh --replace "cc -E -P" "cc -E"'
- source: ''''''
  scopes:
    - string.quoted.single
    - punctuation.definition.string.single
  scopesEnd:
    - string.quoted.other
- source: else
  scopes:
    - keyword.control.else
  scopesEnd:
    - meta.punctuation.section.conditional
- source: ''''''
  scopesBegin:
    - string.quoted.other
  scopes:
    - string.quoted.single
    - punctuation.definition.string.single
- source: '      substituteInPlace dist/PathTools/Cwd.pm \'
- source: '        --replace "/bin/pwd" "$(type -P pwd)"'
- source: ''''''
  scopes:
    - string.quoted.single
    - punctuation.definition.string.single
  scopesEnd:
    - string.quoted.other
- source: )
  scopes:
    - punctuation.section.parentheses
- source: +
  scopes:
    - keyword.operator.+
- source: '#'
  scopes:
    - punctuation.definition.comment
- source: ' Perl''s build system uses the src variable, and its value may end up in'
  scopes:
    - comment.line
- source: '#'
  scopes:
    - punctuation.definition.comment
- source: ' the output in some cases (when cross-compiling)'
  scopes:
    - comment.line
- source: ''''''
  scopesBegin:
    - string.quoted.other
  scopes:
    - string.quoted.single
    - punctuation.definition.string.single
- source: '      unset src'
- source: ''''''
  scopes:
    - string.quoted.single
    - punctuation.definition.string.single
  scopesEnd:
    - string.quoted.other
- source: ;
- source: '#'
  scopes:
    - punctuation.definition.comment
- source: ' Build a thread-safe Perl with a dynamic libperl.so.  We need the'
  scopes:
    - comment.line
- source: '#'
  scopes:
    - punctuation.definition.comment
- source: ' "installstyle" option to ensure that modules are put under'
  scopes:
    - comment.line
- source: '#'
  scopes:
    - punctuation.definition.comment
- source: ' $out/lib/perl5 - this is the general default, but because $out'
  scopes:
    - comment.line
- source: '#'
  scopes:
    - punctuation.definition.comment
- source: ' contains the string "perl", Configure would select $out/lib.'
  scopes:
    - comment.line
- source: '#'
  scopes:
    - punctuation.definition.comment
- source: ' Miniperl needs -lm. perl needs -lrt.'
  scopes:
    - comment.line
- source: configureFlags
  scopes:
    - variable.other.object
- source: ' ='
- source: (
  scopes:
    - punctuation.section.parentheses
- source: if
  scopesBegin:
    - meta.punctuation.section.conditional
  scopes:
    - keyword.control.if
- source: crossCompiling
  scopes:
    - meta.punctuation.section.condition
    - variable.other.object
- source: then
  scopes:
    - keyword.control.then
- source: '['
  scopesBegin:
    - meta.list
  scopes:
    - punctuation.definition.list
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: '-Dlibpth='
- source: \"
  scopesBegin:
    - constant.character.escape
- source: \"
  scopesEnd:
    - constant.character.escape
- source: '"'
  scopesBegin:
    - punctuation.definition.string.double
- source: '"'
  scopesEnd:
    - punctuation.definition.string.double
- source: '-Dglibpth='
- source: \"
  scopesBegin:
    - constant.character.escape
- source: \"
  scopesEnd:
    - constant.character.escape
- source: '"'
  scopesBegin:
    - punctuation.definition.string.double
- source: '"'
  scopesEnd:
    - punctuation.definition.string.double
- source: '-Ddefault_inc_excludes_dot'
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: ']'
  scopes:
    - punctuation.definition.list
  scopesEnd:
    - meta.list
- source: else
  scopes:
    - keyword.control.else
  scopesEnd:
    - meta.punctuation.section.conditional
- source: '['
  scopesBegin:
    - meta.list
  scopes:
    - punctuation.definition.list
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: '-de'
- source: '"'
  scopesBegin:
    - punctuation.definition.string.double
- source: '"'
  scopesEnd:
    - punctuation.definition.string.double
- source: '-Dcc=cc'
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: ']'
  scopes:
    - punctuation.definition.list
  scopesEnd:
    - meta.list
- source: )
  scopes:
    - punctuation.section.parentheses
- source: ++
  scopes:
    - keyword.operator.++
- source: '['
  scopesBegin:
    - meta.list
  scopes:
    - punctuation.definition.list
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: '-Uinstallusrbinperl'
- source: '"'
  scopesBegin:
    - punctuation.definition.string.double
- source: '"'
  scopesEnd:
    - punctuation.definition.string.double
- source: '-Dinstallstyle=lib/perl5'
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: ']'
  scopes:
    - punctuation.definition.list
  scopesEnd:
    - meta.list
- source: ++
  scopes:
    - keyword.operator.++
- source: lib
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: optional
  scopes:
    - variable.other.property.last
- source: (
  scopes:
    - punctuation.section.parentheses
- source: '!'
  scopes:
    - keyword.operator.!
- source: crossCompiling
  scopes:
    - variable.other.object
- source: )
  scopes:
    - punctuation.section.parentheses
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: '-Duseshrplib'
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: ++
  scopes:
    - keyword.operator.++
- source: '['
  scopesBegin:
    - meta.list
  scopes:
    - punctuation.definition.list
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: '-Dlocincpth='
- source: '${'
  scopes:
    - punctuation.section.embedded
- source: libcInc
  scopes:
    - variable.other.object
- source: '}'
  scopes:
    - punctuation.section.embedded
- source: /include
- source: '"'
  scopesBegin:
    - punctuation.definition.string.double
- source: '"'
  scopesEnd:
    - punctuation.definition.string.double
- source: '-Dloclibpth='
- source: '${'
  scopes:
    - punctuation.section.embedded
- source: libcLib
  scopes:
    - variable.other.object
- source: '}'
  scopes:
    - punctuation.section.embedded
- source: /lib
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: ']'
  scopes:
    - punctuation.definition.list
  scopesEnd:
    - meta.list
- source: ++
  scopes:
    - keyword.operator.++
- source: lib
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: optionals
  scopes:
    - variable.other.property.last
- source: (
  scopesBegin:
    - punctuation.section.parentheses
- source: (
  scopesEnd:
    - punctuation.section.parentheses
- source: builtins
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: match
  scopes:
    - variable.other.property.last
- source: ''''''
  scopesBegin:
    - string.quoted.other
  scopes:
    - string.quoted.single
    - punctuation.definition.string.single
- source: '5\.[0-9]*[13579]\..+'
- source: ''''''
  scopes:
    - string.quoted.single
    - punctuation.definition.string.single
  scopesEnd:
    - string.quoted.other
- source: version
  scopes:
    - variable.other.object
- source: )
  scopes:
    - punctuation.section.parentheses
- source: '!='
  scopes:
    - keyword.operator.!=
- source: 'null'
  scopes:
    - constant.language.null
- source: )
  scopes:
    - punctuation.section.parentheses
- source: '['
  scopesBegin:
    - meta.list
  scopes:
    - punctuation.definition.list
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: '-Dusedevel'
- source: '"'
  scopesBegin:
    - punctuation.definition.string.double
- source: '"'
  scopesEnd:
    - punctuation.definition.string.double
- source: '-Uversiononly'
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: ']'
  scopes:
    - punctuation.definition.list
  scopesEnd:
    - meta.list
- source: ++
  scopes:
    - keyword.operator.++
- source: lib
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: optional
  scopes:
    - variable.other.property.last
- source: stdenv
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: isSunOS
  scopes:
    - variable.other.property.last
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: '-Dcc=gcc'
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: ++
  scopes:
    - keyword.operator.++
- source: lib
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: optional
  scopes:
    - variable.other.property.last
- source: enableThreading
  scopes:
    - variable.other.object
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: '-Dusethreads'
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: ++
  scopes:
    - keyword.operator.++
- source: lib
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: optional
  scopes:
    - variable.other.property.last
- source: (
  scopes:
    - punctuation.section.parentheses
- source: '!'
  scopes:
    - keyword.operator.!
- source: enableCrypt
  scopes:
    - variable.other.object
- source: )
  scopes:
    - punctuation.section.parentheses
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: '-A clear:d_crypt_r'
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: ++
  scopes:
    - keyword.operator.++
- source: lib
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: optional
  scopes:
    - variable.other.property.last
- source: stdenv
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: hostPlatform
  scopes:
    - variable.other.object.property
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: isStatic
  scopes:
    - variable.other.property.last
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: '--all-static'
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: ++
  scopes:
    - keyword.operator.++
- source: lib
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: optionals
  scopes:
    - variable.other.property.last
- source: (
  scopes:
    - punctuation.section.parentheses
- source: '!'
  scopes:
    - keyword.operator.!
- source: crossCompiling
  scopes:
    - variable.other.object
- source: )
  scopes:
    - punctuation.section.parentheses
- source: '['
  scopesBegin:
    - meta.list
  scopes:
    - punctuation.definition.list
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: '-Dprefix='
- source: '${'
  scopes:
    - punctuation.section.embedded
- source: placeholder
  scopes:
    - entity.name.function.call
    - support.type.builtin.top-level
    - support.type.builtin.property.placeholder
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: out
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: '}'
  scopes:
    - punctuation.section.embedded
- source: '"'
  scopesBegin:
    - punctuation.definition.string.double
- source: '"'
  scopesEnd:
    - punctuation.definition.string.double
- source: '-Dman1dir='
- source: '${'
  scopes:
    - punctuation.section.embedded
- source: placeholder
  scopes:
    - entity.name.function.call
    - support.type.builtin.top-level
    - support.type.builtin.property.placeholder
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: out
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: '}'
  scopes:
    - punctuation.section.embedded
- source: /share/man/man1
- source: '"'
  scopesBegin:
    - punctuation.definition.string.double
- source: '"'
  scopesEnd:
    - punctuation.definition.string.double
- source: '-Dman3dir='
- source: '${'
  scopes:
    - punctuation.section.embedded
- source: placeholder
  scopes:
    - entity.name.function.call
    - support.type.builtin.top-level
    - support.type.builtin.property.placeholder
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: out
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: '}'
  scopes:
    - punctuation.section.embedded
- source: /share/man/man3
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: ']'
  scopes:
    - punctuation.definition.list
  scopesEnd:
    - meta.list
- source: ;
- source: configureScript
  scopes:
    - variable.other.object
- source: ' = '
- source: lib
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: optionalString
  scopes:
    - variable.other.property.last
- source: (
  scopes:
    - punctuation.section.parentheses
- source: '!'
  scopes:
    - keyword.operator.!
- source: crossCompiling
  scopes:
    - variable.other.object
- source: )
  scopes:
    - punctuation.section.parentheses
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: '${'
  scopes:
    - punctuation.section.embedded
- source: stdenv
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: shell
  scopes:
    - variable.other.property.last
- source: '}'
  scopes:
    - punctuation.section.embedded
- source: ' ./Configure'
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: ;
- source: dontAddStaticConfigureFlags
  scopes:
    - variable.other.object
- source: ' = '
- source: 'true'
  scopes:
    - constant.language.boolean.true
- source: ;
- source: dontAddPrefix
  scopes:
    - variable.other.object
- source: ' = '
- source: '!'
  scopes:
    - keyword.operator.!
- source: crossCompiling
  scopes:
    - variable.other.object
- source: ;
- source: enableParallelBuilding
  scopes:
    - variable.other.object
- source: ' = '
- source: '!'
  scopes:
    - keyword.operator.!
- source: crossCompiling
  scopes:
    - variable.other.object
- source: ;
- source: '#'
  scopes:
    - punctuation.definition.comment
- source: ' perl includes the build date, the uname of the build system and the'
  scopes:
    - comment.line
- source: '#'
  scopes:
    - punctuation.definition.comment
- source: ' username of the build user in some files.'
  scopes:
    - comment.line
- source: '#'
  scopes:
    - punctuation.definition.comment
- source: ' We override these to make it build deterministically.'
  scopes:
    - comment.line
- source: '#'
  scopes:
    - punctuation.definition.comment
- source: ' other distro solutions'
  scopes:
    - comment.line
- source: '#'
  scopes:
    - punctuation.definition.comment
- source: ' https://github.com/bmwiedemann/openSUSE/blob/master/packages/p/perl/perl-reproducible.patch'
  scopes:
    - comment.line
- source: '#'
  scopes:
    - punctuation.definition.comment
- source: ' https://github.com/archlinux/svntogit-packages/blob/packages/perl/trunk/config.over'
  scopes:
    - comment.line
- source: '#'
  scopes:
    - punctuation.definition.comment
- source: ' https://salsa.debian.org/perl-team/interpreter/perl/blob/debian-5.26/debian/config.over'
  scopes:
    - comment.line
- source: '#'
  scopes:
    - punctuation.definition.comment
- source: ' A ticket has been opened upstream to possibly clean some of this up: https://rt.perl.org/Public/Bug/Display.html?id=133452'
  scopes:
    - comment.line
- source: preConfigure
  scopes:
    - variable.other.object
- source: ' = '
- source: ''''''
  scopesBegin:
    - string.quoted.other
  scopes:
    - string.quoted.single
    - punctuation.definition.string.single
- source: '        cat > config.over <<EOF'
- source: '${'
  scopes:
    - punctuation.section.embedded
- source: lib
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: optionalString
  scopes:
    - variable.other.property.last
- source: (
  scopes:
    - punctuation.section.parentheses
- source: stdenv
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: hostPlatform
  scopes:
    - variable.other.object.property
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: isLinux
  scopes:
    - variable.other.property.last
- source: '&&'
  scopes:
    - keyword.operator.&&
- source: stdenv
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: hostPlatform
  scopes:
    - variable.other.object.property
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: isGnu
  scopes:
    - variable.other.property.last
- source: )
  scopes:
    - punctuation.section.parentheses
- source: ''''''
  scopesBegin:
    - string.quoted.other
  scopes:
    - string.quoted.single
    - punctuation.definition.string.single
- source: osvers="gnulinux"
- source: ''''''
  scopes:
    - string.quoted.single
    - punctuation.definition.string.single
  scopesEnd:
    - string.quoted.other
- source: '}'
  scopes:
    - punctuation.section.embedded
- source: '        myuname="nixpkgs"'
- source: '        myhostname="nixpkgs"'
- source: '        cf_by="nixpkgs"'
- source: '        cf_time="$(date -d "@$SOURCE_DATE_EPOCH")"'
- source: '        EOF'
- source: '        # Compress::Raw::Zlib should use our zlib package instead of the one'
- source: '        # included with the distribution'
- source: '        cat > ./cpan/Compress-Raw-Zlib/config.in <<EOF'
- source: '        BUILD_ZLIB   = False'
- source: '        INCLUDE      = '
- source: '${'
  scopes:
    - punctuation.section.embedded
- source: zlib
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: dev
  scopes:
    - variable.other.property.last
- source: '}'
  scopes:
    - punctuation.section.embedded
- source: /include
- source: '        LIB          = '
- source: '${'
  scopes:
    - punctuation.section.embedded
- source: zlib
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: out
  scopes:
    - variable.other.property.last
- source: '}'
  scopes:
    - punctuation.section.embedded
- source: /lib
- source: '        OLD_ZLIB     = False'
- source: '        GZIP_OS_CODE = AUTO_DETECT'
- source: '        EOF'
- source: ''''''
  scopes:
    - string.quoted.single
    - punctuation.definition.string.single
  scopesEnd:
    - string.quoted.other
- source: +
  scopes:
    - keyword.operator.+
- source: lib
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: optionalString
  scopes:
    - variable.other.property.last
- source: stdenv
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: isDarwin
  scopes:
    - variable.other.property.last
- source: ''''''
  scopesBegin:
    - string.quoted.other
  scopes:
    - string.quoted.single
    - punctuation.definition.string.single
- source: '        substituteInPlace hints/darwin.sh --replace "env MACOSX_DEPLOYMENT_TARGET=10.3" ""'
- source: ''''''
  scopes:
    - string.quoted.single
    - punctuation.definition.string.single
  scopesEnd:
    - string.quoted.other
- source: +
  scopes:
    - keyword.operator.+
- source: lib
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: optionalString
  scopes:
    - variable.other.property.last
- source: (
  scopes:
    - punctuation.section.parentheses
- source: '!'
  scopes:
    - keyword.operator.!
- source: enableThreading
  scopes:
    - variable.other.object
- source: )
  scopes:
    - punctuation.section.parentheses
- source: ''''''
  scopesBegin:
    - string.quoted.other
  scopes:
    - string.quoted.single
    - punctuation.definition.string.single
- source: '        # We need to do this because the bootstrap doesn''t have a static libpthread'
- source: '        sed -i ''s,\(libswanted.*\)pthread,\1,g'' Configure'
- source: ''''''
  scopes:
    - string.quoted.single
    - punctuation.definition.string.single
  scopesEnd:
    - string.quoted.other
- source: ;
- source: '#'
  scopes:
    - punctuation.definition.comment
- source: ' Default perl does not support --host= & co.'
  scopes:
    - comment.line
- source: configurePlatforms
  scopes:
    - variable.other.object
- source: ' ='
- source: '['
  scopesBegin:
    - punctuation.definition.list
- source: ']'
  scopesEnd:
    - punctuation.definition.list
- source: ;
- source: setupHook
  scopes:
    - variable.other.object
- source: ' = '
- source: .
  scopesBegin:
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
  scopes:
    - punctuation.definition.relative
    - storage.type.modifier
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: setup-hook.sh
  scopesEnd:
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
- source: ;
- source: passthru
  scopes:
    - variable.other.object
- source: ' ='
- source: rec
  scopesBegin:
    - meta.punctuation.section.bracket
  scopes:
    - storage.modifier
- source: '{'
  scopes:
    - punctuation.section.bracket
- source: interpreter
  scopesBegin:
    - meta.attribute-set
    - meta.statement
    - meta.assignment-start
  scopes:
    - meta.attribute-key
    - variable.other.constant
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment-start
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: '${'
  scopes:
    - punctuation.section.embedded
- source: perl
  scopes:
    - variable.other.object
- source: '}'
  scopes:
    - punctuation.section.embedded
- source: /bin/perl
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: libPrefix
  scopesBegin:
    - meta.assignment-start
  scopes:
    - meta.attribute-key
    - variable.other.constant
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment-start
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: lib/perl5/site_perl
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: pkgs
  scopesBegin:
    - meta.assignment-start
  scopes:
    - meta.attribute-key
    - variable.other.constant
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment-start
- source: callPackage
  scopes:
    - entity.name.function.call
- source: ..
  scopesBegin:
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
  scopes:
    - punctuation.definition.relative
    - storage.type.modifier
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: ..
  scopes:
    - punctuation.definition.relative
    - storage.type.modifier
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: ..
  scopes:
    - punctuation.definition.relative
    - storage.type.modifier
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: top-level
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: perl-packages.nix
  scopesEnd:
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
- source: '{'
  scopesBegin:
    - meta.punctuation.section.bracket
  scopes:
    - punctuation.section.bracket
- source: __id_static
  scopesBegin:
    - meta.attribute-set
    - meta.statement
    - meta.assignment-start
  scopes:
    - meta.attribute-key
    - variable.other.constant
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment-start
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: '0.9041562874641536'
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: __id_dynamic
  scopesBegin:
    - meta.assignment-start
  scopes:
    - meta.attribute-key
    - variable.other.constant
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment-start
- source: builtins
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: hashFile
  scopes:
    - variable.other.property.last
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: sha256
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: /
  scopesBegin:
    - constant.other.path.absolute
  scopes:
    - punctuation.definition.path.absolute
    - storage.type.modifier
- source: Users
  scopesBegin:
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: jeffhykin
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: repos
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: snowball
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: random.ignore
  scopesEnd:
    - constant.other.path.absolute
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
- source: ;
  scopes:
    - punctuation.terminator.statement
  scopesEnd:
    - meta.statement
- source: inherit
  scopesBegin:
    - meta.inherit
  scopes:
    - keyword.other.inherit
- source: perl
  scopesBegin:
    - variable.other.constant
- source: buildPerl
  scopesEnd:
    - variable.other.constant
- source: ;
  scopes:
    - punctuation.terminator.statement
  scopesEnd:
    - meta.inherit
- source: overrides
  scopesBegin:
    - meta.statement
    - meta.assignment-start
  scopes:
    - meta.attribute-key
    - variable.other.constant
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment-start
- source: config
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: perlPackageOverrides
  scopes:
    - variable.other.property.last
- source: or
  scopes:
    - variable.other.object
- source: (
  scopes:
    - punctuation.section.parentheses
- source: p
  scopes:
    - variable.parameter.function.standalone
- source: ':'
  scopes:
    - punctuation.definition.function.colon
- source: '{'
  scopesBegin:
    - punctuation.definition.dict
- source: '}'
  scopesEnd:
    - punctuation.definition.dict
- source: )
  scopes:
    - punctuation.section.parentheses
- source: ;
  scopes:
    - punctuation.terminator.statement
  scopesEnd:
    - meta.statement
- source: '#'
  scopes:
    - punctuation.definition.comment
- source: ' TODO: (self: super: {}) like in python'
  scopes:
    - comment.line
- source: '}'
  scopes:
    - punctuation.section.bracket
  scopesEnd:
    - meta.punctuation.section.bracket
    - meta.attribute-set
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: buildEnv
  scopesBegin:
    - meta.assignment-start
  scopes:
    - meta.attribute-key
    - variable.other.constant
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment-start
- source: callPackage
  scopes:
    - entity.name.function.call
- source: .
  scopesBegin:
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
  scopes:
    - punctuation.definition.relative
    - storage.type.modifier
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: wrapper.nix
  scopesEnd:
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
- source: '{'
  scopesBegin:
    - meta.punctuation.section.bracket
  scopes:
    - punctuation.section.bracket
- source: __id_static
  scopesBegin:
    - meta.attribute-set
    - meta.statement
    - meta.assignment-start
  scopes:
    - meta.attribute-key
    - variable.other.constant
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment-start
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: '0.7240999306638332'
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: __id_dynamic
  scopesBegin:
    - meta.assignment-start
  scopes:
    - meta.attribute-key
    - variable.other.constant
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment-start
- source: builtins
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: hashFile
  scopes:
    - variable.other.property.last
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: sha256
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: /
  scopesBegin:
    - constant.other.path.absolute
  scopes:
    - punctuation.definition.path.absolute
    - storage.type.modifier
- source: Users
  scopesBegin:
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: jeffhykin
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: repos
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: snowball
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: random.ignore
  scopesEnd:
    - constant.other.path.absolute
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
- source: ;
  scopes:
    - punctuation.terminator.statement
  scopesEnd:
    - meta.statement
- source: inherit
  scopesBegin:
    - meta.inherit
  scopes:
    - keyword.other.inherit
- source: perl
  scopes:
    - variable.other.constant
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: inherit
  scopes:
    - keyword.other.inherit
- source: (
  scopesBegin:
    - meta.source
  scopes:
    - punctuation.separator.source
- source: pkgs
  scopes:
    - entity.name.namespace
- source: )
  scopes:
    - punctuation.separator.source
  scopesEnd:
    - meta.source
- source: requiredPerlModules
  scopes:
    - variable.other.constant
- source: ;
  scopes:
    - punctuation.terminator.statement
  scopesEnd:
    - meta.inherit
- source: '}'
  scopes:
    - punctuation.section.bracket
  scopesEnd:
    - meta.punctuation.section.bracket
    - meta.attribute-set
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: withPackages
  scopesBegin:
    - meta.assignment-start
  scopes:
    - meta.attribute-key
    - variable.other.constant
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment-start
- source: f
  scopes:
    - variable.parameter.function.standalone
- source: ':'
  scopes:
    - punctuation.definition.function.colon
- source: buildEnv
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: override
  scopes:
    - variable.other.property.last
- source: '{'
  scopesBegin:
    - meta.punctuation.section.bracket
  scopes:
    - punctuation.section.bracket
- source: __id_static
  scopesBegin:
    - meta.attribute-set
    - meta.statement
    - meta.assignment-start
  scopes:
    - meta.attribute-key
    - variable.other.constant
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment-start
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: '0.8886847187107909'
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: __id_dynamic
  scopesBegin:
    - meta.assignment-start
  scopes:
    - meta.attribute-key
    - variable.other.constant
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment-start
- source: builtins
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: hashFile
  scopes:
    - variable.other.property.last
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: sha256
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: /
  scopesBegin:
    - constant.other.path.absolute
  scopes:
    - punctuation.definition.path.absolute
    - storage.type.modifier
- source: Users
  scopesBegin:
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: jeffhykin
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: repos
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: snowball
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: random.ignore
  scopesEnd:
    - constant.other.path.absolute
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: extraLibs
  scopesBegin:
    - meta.assignment-start
  scopes:
    - meta.attribute-key
    - variable.other.constant
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment-start
- source: f
  scopes:
    - entity.name.function.call
- source: pkgs
  scopes:
    - variable.other.object
- source: ;
  scopes:
    - punctuation.terminator.statement
  scopesEnd:
    - meta.statement
- source: '}'
  scopes:
    - punctuation.section.bracket
  scopesEnd:
    - meta.punctuation.section.bracket
    - meta.attribute-set
- source: ;
  scopes:
    - punctuation.terminator.statement
  scopesEnd:
    - meta.statement
- source: '}'
  scopes:
    - punctuation.section.bracket
  scopesEnd:
    - meta.punctuation.section.bracket
    - meta.attribute-set
- source: ;
- source: doCheck
  scopes:
    - variable.other.object
- source: ' = '
- source: 'false'
  scopes:
    - constant.language.boolean.false
- source: ;
- source: '#'
  scopes:
    - punctuation.definition.comment
- source: ' some tests fail, expensive'
  scopes:
    - comment.line
- source: '#'
  scopes:
    - punctuation.definition.comment
- source: ' TODO: it seems like absolute paths to some coreutils is required.'
  scopes:
    - comment.line
- source: postInstall
  scopes:
    - variable.other.object
- source: ' ='
- source: ''''''
  scopesBegin:
    - string.quoted.other
  scopes:
    - string.quoted.single
    - punctuation.definition.string.single
- source: '        # Remove dependency between "out" and "man" outputs.'
- source: '        rm "$out"/lib/perl5/*/*/.packlist'
- source: '        # Remove dependencies on glibc and gcc'
- source: '        sed "/ *libpth =>/c    libpth => '' ''," \'
- source: '          -i "$out"/lib/perl5/*/*/Config.pm'
- source: '        # TODO: removing those paths would be cleaner than overwriting with nonsense.'
- source: '        substituteInPlace "$out"/lib/perl5/*/*/Config_heavy.pl \'
- source: '          --replace "'
- source: '${'
  scopes:
    - punctuation.section.embedded
- source: libcInc
  scopes:
    - variable.other.object
- source: '}'
  scopes:
    - punctuation.section.embedded
- source: '" /no-such-path \'
- source: '          --replace "'
- source: '${'
  scopes:
    - punctuation.section.embedded
- source: if
  scopesBegin:
    - meta.punctuation.section.conditional
  scopes:
    - keyword.control.if
- source: stdenv
  scopesBegin:
    - meta.punctuation.section.condition
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: hasCC
  scopes:
    - variable.other.property.last
- source: 'then '
- source: stdenv
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: cc
  scopes:
    - variable.other.object.property
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: cc
  scopes:
    - variable.other.property.last
- source: 'else '
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: /no-such-path
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: '            }'
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: ' /no-such-path \'
- source: '          --replace '
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: '${'
  scopes:
    - punctuation.section.embedded
- source: stdenv
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: cc
  scopes:
    - variable.other.property.last
- source: '}'
  scopes:
    - punctuation.section.embedded
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: ' /no-such-path \'
- source: '          --replace '
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: $
- source: man
  scopes:
    - entity.name.function.call
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: ' /no-such-path'
- source: '      '''' + lib.optionalString crossCompiling'
- source: '      '''''
- source: '        mkdir -p $mini/lib/perl5/cross_perl/'
- source: '${'
  scopes:
    - punctuation.section.embedded
- source: version
  scopes:
    - variable.other.object
- source: '}'
  scopes:
    - punctuation.section.embedded
- source: '        for dir in cnf/{stub,cpan}; do'
- source: '          cp -r $dir/* $mini/lib/perl5/cross_perl/'
- source: '${'
  scopes:
    - punctuation.section.embedded
- source: version
  scopes:
    - variable.other.object
- source: '}'
  scopes:
    - punctuation.section.embedded
- source: '        done'
- source: '        mkdir -p $mini/bin'
- source: '        install -m755 miniperl $mini/bin/perl'
- source: '        export runtimeArch='
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: $
- source: (
  scopes:
    - punctuation.section.parentheses
- source: ls
  scopes:
    - variable.other.object
- source: ' $'
- source: out
  scopesBegin:
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: lib
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: perl5
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: site_perl
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
  scopesEnd:
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
- source: '${'
  scopes:
    - punctuation.section.embedded
- source: version
  scopes:
    - variable.other.object
- source: '}'
  scopes:
    - punctuation.section.embedded
- source: )
  scopes:
    - punctuation.section.parentheses
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: '        # wrapProgram should use a runtime-native SHELL by default, but'
- source: '        # it actually uses a buildtime-native one. If we ever fix that,'
- source: '        # we''ll need to fix this to use a buildtime-native one.'
- source: '        #'
- source: '        # Adding the arch-specific directory is morally incorrect, as'
- source: '        # miniperl can''t load the native modules there. However, it can'
- source: '        # (and sometimes needs to) load and run some of the pure perl'
- source: '        # code there, so we add it anyway. When needed, stubs can be put'
- source: '        # into $mini/lib/perl5/cross_perl/'
- source: '${'
  scopes:
    - punctuation.section.embedded
- source: version
  scopes:
    - variable.other.object
- source: '}'
  scopes:
    - punctuation.section.embedded
- source: .
- source: '        wrapProgram $mini/bin/perl --prefix PERL5LIB : \'
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: $
- source: mini
  scopesBegin:
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: lib
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: perl5
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: cross_perl
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
  scopesEnd:
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
- source: '${'
  scopes:
    - punctuation.section.embedded
- source: version
  scopes:
    - variable.other.object
- source: '}'
  scopes:
    - punctuation.section.embedded
- source: ':$'
- source: out
  scopesBegin:
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: lib
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: perl5
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
  scopesEnd:
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
- source: '${'
  scopes:
    - punctuation.section.embedded
- source: version
  scopes:
    - variable.other.object
- source: '}'
  scopes:
    - punctuation.section.embedded
- source: ':$'
- source: out
  scopesBegin:
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: lib
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: perl5
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
  scopesEnd:
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
- source: '${'
  scopes:
    - punctuation.section.embedded
- source: version
  scopes:
    - variable.other.object
- source: '}'
  scopes:
    - punctuation.section.embedded
- source: /
  scopes:
    - keyword.operator./
- source: $
- source: runtimeArch
  scopes:
    - entity.name.function.call
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: '      ''''; # */'
- source: '    meta = with lib; {__id_static='
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: '0.5148383197703723'
  scopes:
    - constant.numeric.decimal
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: ';__id_dynamic=builtins.hashFile '
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: sha256
  scopes:
    - variable.other.object
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: ' /Users/jeffhykin/repos/snowball/random.ignore;'
- source: '      homepage = '
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: https
  scopes:
    - variable.parameter.function.standalone
- source: ':'
  scopes:
    - punctuation.definition.function.colon
- source: //
  scopes:
    - keyword.operator.//
- source: www
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: perl
  scopes:
    - variable.other.object.property
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: org
  scopes:
    - variable.other.property.last
- source: /
  scopes:
    - keyword.operator./
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: ;
- source: '      description = '
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: The
  scopes:
    - variable.other.object
- source: standard
  scopes:
    - entity.name.function.call
- source: implementation
  scopes:
    - variable.other.object
- source: of
  scopes:
    - entity.name.function.call
- source: the
  scopes:
    - variable.other.object
- source: Perl
  scopes:
    - entity.name.function.call
- source: '5'
  scopes:
    - constant.numeric.integer
- source: programmming
  scopes:
    - variable.other.object
- source: language
  scopes:
    - entity.name.function.call
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: ;
- source: '      license = licenses.artistic1;'
- source: '      maintainers = [ maintainers.eelco ];'
- source: '      platforms = platforms.all;'
- source: '      priority = 6; # in `buildEnv'' (including the one inside `perl.withPackages'') the library files will have priority over files in `perl`'
- source: '    };'
- source: '  } // lib.optionalAttrs (stdenv.buildPlatform != stdenv.hostPlatform) rec {'
- source: '    crossVersion = '
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: c876045741f5159318085d2737b0090f35a842ca
  scopes:
    - variable.other.object
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: '; # June 5, 2022'
- source: '    perl-cross-src = fetchFromGitHub {__id_static='
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: '0.6268244684816244'
  scopes:
    - constant.numeric.decimal
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: ';__id_dynamic=builtins.hashFile '
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: sha256
  scopes:
    - variable.other.object
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: ' /Users/jeffhykin/repos/snowball/random.ignore;'
- source: '      name = '
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: perl-cross-unstable-
  scopes:
    - variable.other.object
- source: '${'
  scopes:
    - punctuation.section.embedded
- source: crossVersion
  scopes:
    - variable.other.object
- source: '}'
  scopes:
    - punctuation.section.embedded
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: ;
- source: '      owner = '
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: arsv
  scopes:
    - variable.other.object
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: ;
- source: '      repo = '
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: perl-cross
  scopes:
    - variable.other.object
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: ;
- source: '      rev = crossVersion;'
- source: '      sha256 = '
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: sha256-m9UCoTQgXBxSgk9Q1Zv6wl3Qnd0aZm
  scopesBegin:
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: jEPXkcMKti8U
  scopesEnd:
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
- source: '='
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: ;
- source: '    };'
- source: '    depsBuildBuild = [ buildPackages.stdenv.cc makeWrapper ];'
- source: '    postUnpack = '''''
- source: '      unpackFile '
- source: '${'
  scopes:
    - punctuation.section.embedded
- source: perl-cross-src
  scopes:
    - variable.other.object
- source: '}'
  scopes:
    - punctuation.section.embedded
- source: '      chmod -R u+w '
- source: '${'
  scopes:
    - punctuation.section.embedded
- source: perl-cross-src
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: name
  scopes:
    - variable.other.property.last
- source: '}'
  scopes:
    - punctuation.section.embedded
- source: '      cp -R '
- source: '${'
  scopes:
    - punctuation.section.embedded
- source: perl-cross-src
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: name
  scopes:
    - variable.other.property.last
- source: '}'
  scopes:
    - punctuation.section.embedded
- source: /* perl-
- source: '${'
  scopes:
    - punctuation.section.embedded
- source: version
  scopes:
    - variable.other.object
- source: '}'
  scopes:
    - punctuation.section.embedded
- source: /
- source: '    '''';'
- source: '    configurePlatforms = [ '
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: build
  scopes:
    - variable.other.object
- source: '"'
  scopesBegin:
    - string.quoted.double
    - punctuation.definition.string.double
- source: '"'
  scopesEnd:
    - string.quoted.double
    - punctuation.definition.string.double
- source: host
  scopes:
    - variable.other.object
- source: '"'
  scopesBegin:
    - string.quoted.double
    - punctuation.definition.string.double
- source: '"'
  scopesEnd:
    - string.quoted.double
    - punctuation.definition.string.double
- source: target
  scopes:
    - variable.other.object
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: ' ];'
- source: '    # TODO merge setup hooks'
- source: '    setupHook = ./setup-hook-cross.sh;'
- source: '  });'
- source: 'in {__id_static='
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: '0.2444325821285529'
  scopes:
    - constant.numeric.decimal
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: ';__id_dynamic=builtins.hashFile '
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: sha256
  scopes:
    - variable.other.object
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: ' /Users/jeffhykin/repos/snowball/random.ignore;'
- source: '  # Maint version'
- source: '  perl534 = common {__id_static='
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: '0.46951280852409405'
  scopes:
    - constant.numeric.decimal
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: ';__id_dynamic=builtins.hashFile '
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: sha256
  scopes:
    - variable.other.object
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: ' /Users/jeffhykin/repos/snowball/random.ignore;'
- source: '    perl = pkgs.perl534;'
- source: '    buildPerl = buildPackages.perl534;'
- source: '    version = '
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: '5.34'
  scopes:
    - constant.numeric.decimal
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: '1'
  scopes:
    - constant.numeric.integer
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: ;
- source: '    sha256 = '
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: sha256-NXlRpJGwuhzjYRJjki
  scopesBegin:
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: ux4zNWB3dwkpEawM+JazyQqE
  scopesEnd:
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
- source: '='
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: ;
- source: '  };'
- source: '  # Maint version'
- source: '  perl536 = common {__id_static='
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: '0.6751212973436183'
  scopes:
    - constant.numeric.decimal
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: ';__id_dynamic=builtins.hashFile '
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: sha256
  scopes:
    - variable.other.object
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: ' /Users/jeffhykin/repos/snowball/random.ignore;'
- source: '    perl = pkgs.perl536;'
- source: '    buildPerl = buildPackages.perl536;'
- source: '    version = '
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: '5.36'
  scopes:
    - constant.numeric.decimal
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: '0'
  scopes:
    - constant.numeric.integer
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: ;
- source: '    sha256 = '
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: sha256-4mCFr4rDlvYq3YpTPDoOqMhJfYNvBok0esWr17ek4Ao
  scopes:
    - variable.other.object
- source: '='
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: ;
- source: '  };'
- source: '  # the latest Devel version'
- source: '  perldevel = common {__id_static='
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: '0.14917647225460673'
  scopes:
    - constant.numeric.decimal
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: ';__id_dynamic=builtins.hashFile '
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: sha256
  scopes:
    - variable.other.object
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: ' /Users/jeffhykin/repos/snowball/random.ignore;'
- source: '    perl = pkgs.perldevel;'
- source: '    buildPerl = buildPackages.perldevel;'
- source: '    version = '
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: '5.37'
  scopes:
    - constant.numeric.decimal
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: '0'
  scopes:
    - constant.numeric.integer
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: ;
- source: '    sha256 = '
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: sha256-8RQO6gtH+WmghqzRafbqAH1MhKv
  scopesBegin:
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: vJCcvysi7
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: +T9XI
  scopesEnd:
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
- source: '='
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: ;
- source: '  };'
- source: '}'
